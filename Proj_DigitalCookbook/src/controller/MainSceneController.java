package controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import model.Recipe;
import util.ActionStage;
import javafx.event.ActionEvent;
import java.io.File;
import java.net.URL;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.ResourceBundle;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import dataAccess.DAO_Recipe;

/**
 * main scene's controller define operation in MainScene.
 * 
 * @author Liu Tao
 *
 */
public class MainSceneController implements Initializable {
	@FXML
	private Button btn_showFavor;
	@FXML
	private Button btn_search;
	@FXML
	private TextField text_1;
	@FXML
	private ImageView image_favor1;
	@FXML
	private Label name_favor1;
	@FXML
	private ImageView image_favor2;
	@FXML
	private Label name_favor2;
	@FXML
	private ImageView image_favor3;
	@FXML
	private Label name_favor3;
	@FXML
	private Label label_myfavor;

	public static String searchText;

	public static LinkedList<Recipe> favoriteRec;

	LinkedList<ImageView> q_image = new LinkedList<>();

	LinkedList<Label> q_label = new LinkedList<>();

	File file = new File("src/image");
	int pathLength = 0;

	/**
	 * initialized operation in MainScene
	 */
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {

		// TODO 自动生成的方法存根
		try {
			q_image.offer(image_favor1);
			q_image.offer(image_favor2);
			q_image.offer(image_favor3);
			q_label.offer(name_favor1);
			q_label.offer(name_favor2);
			q_label.offer(name_favor3);

			favoriteRec = DAO_Recipe.queryRecipebyFavorite();

			for (int i = 0; i < (favoriteRec.size() < 3 ? favoriteRec.size() : 3); i++) {
				q_image.get(i).setImage(
						new Image(file.getAbsolutePath() + favoriteRec.get(i).getEndProductImage().substring(10)));
				q_label.get(i).setText(favoriteRec.get(i).getRecipeName());
			}

			if (favoriteRec.size() == 0) {
				label_myfavor.setVisible(false);
				btn_showFavor.setVisible(false);

			}

		} catch (SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}

	}

	/**
	 * event for button "show all" after click all favorite Recipe will show
	 * 
	 * @param event action event
	 */
	@FXML
	public void eventButton(ActionEvent event) {
		FXMLLoader loader = new ActionStage(new Stage(), "/view/favoriteRecipeScene.fxml", "Favorite Recipe", 545, 805)
				.getLoader();
		Stage stage = (Stage) btn_search.getScene().getWindow();
		stage.close();
	}

	/**
	 * event for button "search" after click this button a search result scene will
	 * show
	 * 
	 * @param event
	 * @throws SQLException
	 */
	public void eventButton2(ActionEvent event) throws SQLException {
		searchText = text_1.getText();
		FXMLLoader loader = new ActionStage(new Stage(), "/view/SearchScene.fxml", "Results", 660, 900).getLoader();
		Stage stage = (Stage) btn_search.getScene().getWindow();
		stage.close();

	}

	/**
	 * event for click favorite recipe label details of this favorite recipe will
	 * show
	 * 
	 * @param event
	 */
	public void clickFavorRec(MouseEvent event) {

		// TODO Autogenerated
		SearchSceneController.searchResults_RecName = null;
		String t = event.getPickResult().getIntersectedNode().toString();
		String p = "\"([^\"]*)\"";
		Pattern P = Pattern.compile(p);
		Matcher matcher1 = P.matcher(t);
		if (matcher1.find()) {
			SearchSceneController.searchResults_RecName = matcher1.group(0).replaceAll(p, "$1");
		}
		FXMLLoader loader = new ActionStage(new Stage(), "/view/RecipeScene.fxml", "Recipe", 935, 780).getLoader();
		Stage stage = (Stage) btn_search.getScene().getWindow();
		stage.close();
	}

	/**
	 * event for add new button after click a new scene for adding new recipe will
	 * show
	 * 
	 * @param event
	 */
	public void addNewRecipe(ActionEvent event) {
		FXMLLoader loader = new ActionStage(new Stage(), "/view/AddRecipeScene.fxml", "AddRecipe", 1050, 640)
				.getLoader();
		Stage stage = (Stage) btn_search.getScene().getWindow();
		stage.close();
	}

	@FXML
	public void event_highlightLabel_1(MouseEvent event) {
		name_favor1.setStyle("-fx-text-fill:red;");
		name_favor1.setUnderline(true);
	}

	public void event_cancelHighlightLabel_1(MouseEvent event) {
		name_favor1.setStyle("-fx-text-fill:black;");
		name_favor1.setUnderline(false);
	}

	public void event_highlightLabel_2(MouseEvent event) {
		name_favor2.setStyle("-fx-text-fill:red;");
		name_favor2.setUnderline(true);
	}

	public void event_cancelHighlightLabel_2(MouseEvent event) {
		name_favor2.setStyle("-fx-text-fill:black;");
		name_favor2.setUnderline(false);
	}

	public void event_highlightLabel_3(MouseEvent event) {
		name_favor3.setStyle("-fx-text-fill:red;");
		name_favor3.setUnderline(true);
	}

	public void event_cancelHighlightLabel_3(MouseEvent event) {
		name_favor3.setStyle("-fx-text-fill:black;");
		name_favor3.setUnderline(false);
	}

}
